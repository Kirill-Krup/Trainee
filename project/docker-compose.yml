version: '3.8'

services:
  userdb:
    image: postgres:16
    container_name: userdb
    environment:
      - POSTGRES_DB=demo
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
    ports:
      - "5432:5432"
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  authdb:
    image: postgres:16
    container_name: authdb
    environment:
      - POSTGRES_DB=auth_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
    ports:
      - "5433:5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  orderdb:
    image: postgres:16
    container_name: orderdb
    environment:
      - POSTGRES_DB=order_service_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
    ports:
      - "5434:5432"
    volumes:
      - order_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:6-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

  userservice:
    build:
      context: ./userservice
      dockerfile: Dockerfile
    container_name: userservice
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://userdb:5432/demo
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=12345
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SERVER_PORT=8081
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - userdb
      - redis
    restart: unless-stopped
    networks:
      - app-network

  authservice:
    build:
      context: ./authservice
      dockerfile: Dockerfile
    container_name: authservice
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://authdb:5432/auth_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=12345
      - SERVER_PORT=8082
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - authdb
    restart: unless-stopped
    networks:
      - app-network

  orderservice:
    build:
      context: ./orderservice
      dockerfile: Dockerfile
    container_name: orderservice
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://orderdb:5432/order_service_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=12345
      - SERVER_PORT=8083
    depends_on:
      - orderdb
    restart: unless-stopped
    networks:
      - app-network

  apigateway:
    build:
      context: ./apigateway
      dockerfile: Dockerfile
    container_name: apigateway
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - userservice
      - authservice
      - orderservice
    restart: unless-stopped
    networks:
      - app-network
volumes:
  user_postgres_data:
  auth_postgres_data:
  order_postgres_data:
  redis_data:
networks:
  app-network:
    driver: bridge